DIR=$(cd `dirname $0` && pwd)

OldDef=0
NewDef=0
OldVersion=aa926fbd273c7d62d43487f73f2f3cdce7bec5a8
NewVersion="0"
BUILD_ARM6=1
BUILD_ARM7=1
LOOP_NUM=1
GIT=0

#parse input
for i in $@
do 
	if [ $OldDef -eq "1" ]
	then
		OldVersion=$i
		echo "OldVersion=$OldVersion"
		OldDef=0
	fi
	
	if [ $NewDef -eq "1" ]
	then
		NewVersion=$i
		echo "NewVersion=$NewVersion"
		NewDef=1
	fi
	
	if [ $i = "-GIT" ]
	then
		echo "GIT=1"
		GIT=0
	fi
	
	if [ $i = "-6" ]
	then
		echo "BUILD_ARM7=0"
		BUILD_ARM7=0
	fi
	
	if [ $i = "-7" ]
	then
		echo "BUILD_ARM6=0"
		BUILD_ARM6=0
	fi
	
	if [ $i = "-old" ]
	then
		OldDef=1
	fi
	
	if [ $i = "-new" ]
	then
		NewDef=1
	fi
	
	if [ $i = "-help" -o  $i = "--help" -o  $i = "help" ]
	then
		echo "Usage: libvpx-full-build-win <Options>
		
		<Options>
		
		-new (commit hash)	build new using this hash
		-old (commit hash)	build old using this hash
		-64					build 64 bit only
		-32					build 32 bit only"
		
	fi
done

if [ $BUILD_ARM6 = 1 ]
then
	cd $DIR

	#Clean any prexising libvpx-tester libs
	rm -f $DIR/libvpx-tester/MasterFile/lib/libvpx_Arm6.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib/libvpx_MemArm6.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib/libvpx_NewArm6.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib/libvpx_OldArm6.a

	#Clean any prexising libvpx-tester exes
	rm -f $DIR/libvpx-tester/TestFolder_Arm6/VP8_Tester_API_32Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm6/VP8vNewest_PlugIn_DLib_DMode_32Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm6/VP8vNewest_PlugIn_RLib_RMode_32Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm6/VP8vOldest_PlugIn_RLib_RMode_32Bit.exe
	
	#if set to override current check out get fresh
	if [ GIT = 1 ]
	then
		#Clone and set up clean versions of libvpx libvpx-old and libvpx-tester
		git clone http://git.chromium.org/webm/libvpx.git
		if [ $NewVersion != 0 ]
		then
			cd libvpx
			git checkout $NewVersion
			echo "current libvpx version: $NewVersion"
			cd ..
		fi
		git clone http://git.chromium.org/webm/libvpx.git libvpx-old
		cd libvpx-old
		git checkout $OldVersion
		cd ..
		git clone http://git.chromium.org/webm/libvpx-tester.git
	fi

	#if directories dont exist check them out
	if [ ! -d "$DIR/libvpx/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx.git
		if [ $NewVersion != 0 ]
		then
			cd libvpx
			git checkout $NewVersion
			echo "current libvpx version: $NewVersion"
			cd ..
		fi
	fi

	if [ ! -d "$DIR/libvpx-old/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx.git libvpx-old
		cd libvpx-old
		git checkout $OldVersion
		cd ..
	fi

	if [ ! -d "$DIR/libvpx-tester/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx-tester.git
	fi
	
	#Set Permisions
	chmod 777 /scripts/Build-VP8-Arm6-libvpx
	chmod 777 /scripts/Build-VP8-Arm6-libvpx-Debug
	chmod 777 /scripts/Build-VP8-Arm6-libvpx-old

	#Build libvpx variations
	./scripts/Build-VP8-Arm6-libvpx
	./scripts/Build-VP8-Arm6-libvpx-Debug
	./scripts/Build-VP8-Arm6-libvpx-old

	#make sure lib directories exist
	mkdir $DIR/libvpx-tester/MasterFile/lib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib

	#copy new libraries for the tester to use
	cp -f $DIR/libvpx-build-Arm6/libvpx.a $DIR/libvpx-tester/MasterFile/lib/libvpx_Arm6.a
	cp -f $DIR/libvpx-build-Arm6-Debug/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib/libvpx_MemArm6.a
	cp -f $DIR/libvpx-build-Arm6/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib/libvpx_NewArm6.a
	cp -f $DIR/libvpx-build-Arm6-old/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib/libvpx_OldArm6.a

	#make sure include folders exist
	mkdir $DIR/libvpx-tester/MasterFile/include/release-arm6
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm6
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm6
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm6

	#copy include files over
	cp -f $DIR/libvpx-build-Arm6/vpx_config.h $DIR/libvpx-tester/MasterFile/include/release-arm6/vpx_config.h
	cp -f $DIR/libvpx-build-Arm6/vpx_version.h $DIR/libvpx-tester/MasterFile/include/release-arm6/vpx_version.h
	
	cp -f $DIR/libvpx-build-Arm6/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm6/vpx_config.h
	cp -f $DIR/libvpx-build-Arm6/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm6/vpx_version.h
	
	cp -f $DIR/libvpx-build-Arm6-old/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm6/vpx_config.h
	cp -f $DIR/libvpx-build-Arm6-old/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm6/vpx_version.h
	
	cp -f $DIR/libvpx-build-Arm6-Debug/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm6/vpx_config.h
	cp -f $DIR/libvpx-build-Arm6-Debug/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm6/vpx_version.h

	cd $DIR/libvpx-tester/
	chmod 777 make_Arm6_API

	#run the tester make scripts
	./make_Arm6_API
	
	cp -f $DIR/libvpx-build-Arm6/vpxenc $DIR/libvpx-tester/TestFolder_Arm6/vpxenc.exe
	cp -f $DIR/libvpx-build-Arm6/vpxdec $DIR/libvpx-tester/TestFolder_Arm6/vpxdec.exe
fi

if [ $BUILD_ARM7 = 1 ]
then
	cd $DIR

	#Clean any prexising libvpx-tester libs
	rm -f $DIR/libvpx-tester/MasterFile/lib/libvpx_Arm7.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib/libvpx_MemArm7.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib/libvpx_NewArm7.a
	rm -f $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib/libvpx_OldArm7.a

	#Clean any prexising libvpx-tester exes
	rm -f $DIR/libvpx-tester/TestFolder_Arm7/VP8_Tester_API_64Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm7/VP8vNewest_PlugIn_DLib_DMode_64Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm7/VP8vNewest_PlugIn_RLib_RMode_64Bit.exe
	rm -f $DIR/libvpx-tester/TestFolder_Arm7/VP8vOldest_PlugIn_RLib_RMode_64Bit.exe

	if [ $BUILD_ARM6 = 0 ]
	then
		if [ GIT = 1 ]
		then
			#Clone and set up clean versions of libvpx libvpx-old and libvpx-tester
			git clone http://git.chromium.org/webm/libvpx.git
			if [ $NewVersion != 0 ]
			then
				cd libvpx
				git checkout $NewVersion
				echo "current libvpx version: $NewVersion"
				cd ..
			fi
			git clone http://git.chromium.org/webm/libvpx.git libvpx-old
			cd libvpx-old
			git checkout $OldVersion
			cd ..
			git clone http://git.chromium.org/webm/libvpx-tester.git
		fi
	fi

	#if directories dont exist check them out
	if [ ! -d "$DIR/libvpx/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx.git
		if [ $NewVersion != 0 ]
		then
			cd libvpx
			git checkout $NewVersion
			echo "current libvpx version: $NewVersion"
			cd ..
		fi
	fi

	if [ ! -d "$DIR/libvpx-old/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx.git libvpx-old
		cd libvpx-old
		git checkout $OldVersion
		cd ..
	fi

	if [ ! -d "$DIR/libvpx-tester/" ]
	then
    		git clone http://git.chromium.org/webm/libvpx-tester.git
	fi
	
	chmod 777 /scripts/Build-VP8-Arm7-libvpx
	chmod 777 /scripts/Build-VP8-Arm7-libvpx-Debug
	chmod 777 /scripts/Build-VP8-Arm7-libvpx-old

	#Build libvpx variations
	./scripts/Build-VP8-Arm7-libvpx
	./scripts/Build-VP8-Arm7-libvpx-Debug
	./scripts/Build-VP8-Arm7-libvpx-old

	#make sure lib directories exist
	mkdir $DIR/libvpx-tester/MasterFile/lib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib

	#copy new libraries for the tester to use
	cp -f $DIR/libvpx-build-Arm7/libvpx.a $DIR/libvpx-tester/MasterFile/lib/libvpx_Arm7.a
	cp -f $DIR/libvpx-build-Arm7-Debug/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/lib/libvpx_MemArm7.a
	cp -f $DIR/libvpx-build-Arm7/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/newlib/libvpx_NewArm7.a
	cp -f $DIR/libvpx-build-Arm7-old/libvpx.a $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/oldlib/libvpx_OldArm7.a

	#make sure include folders exist
	mkdir $DIR/libvpx-tester/MasterFile/include/release-arm7
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm7
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm7
	mkdir $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm7

	#copy include files over
	cp -f $DIR/libvpx-build-Arm7/vpx_config.h $DIR/libvpx-tester/MasterFile/include/release-arm7/vpx_config.h
	cp -f $DIR/libvpx-build-Arm7/vpx_version.h $DIR/libvpx-tester/MasterFile/include/release-arm7/vpx_version.h

	cp -f $DIR/libvpx-build-Arm7/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm7/vpx_config.h
	cp -f $DIR/libvpx-build-Arm7/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-new-arm7/vpx_version.h

	cp -f $DIR/libvpx-build-Arm7-old/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm7/vpx_config.h
	cp -f $DIR/libvpx-build-Arm7-old/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8ReleasePlugIn/MasterFile/include/release-old-arm7/vpx_version.h

	cp -f $DIR/libvpx-build-Arm7-Debug/vpx_config.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm7/vpx_config.h
	cp -f $DIR/libvpx-build-Arm7-Debug/vpx_version.h $DIR/libvpx-tester/SupportingPlugInFiles/VP8DebugPlugIn/MasterFile/include/debug-arm7/vpx_version.h

	cd $DIR/libvpx-tester/
	chmod 777 make_Arm7_API

	#run the tester make scripts
	./make_Arm7_API
	
	cp -f $DIR/libvpx-build-Arm7/vpxenc $DIR/libvpx-tester/TestFolder_Arm7/vpxenc.exe
	cp -f $DIR/libvpx-build-Arm7/vpxdec $DIR/libvpx-tester/TestFolder_Arm7/vpxdec.exe
	
fi
